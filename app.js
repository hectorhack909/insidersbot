const { createBot, createProvider, createFlow, addKeyword, addAnswer } = require('@bot-whatsapp/bot')

const QRPortalWeb = require('@bot-whatsapp/portal')
const BaileysProvider = require('@bot-whatsapp/provider/baileys')
const MockAdapter = require('@bot-whatsapp/database/mock')
const { bindWaitForConnectionUpdate, delay } = require('@whiskeysockets/baileys')

const flujoPrincipal = addKeyword (['hola','bot']).addAnswer('Holaüëã! Bienvenido a *Insiders Brand New*, te damos las gracias por contactarnos üòâ.')
.addAnswer('Podr√≠as *indicarnos* cu√°l es tu *motivo* de *consulta*? ‚ùî‚ùì.',{
    delay:2000
})
.addAnswer('Escribe *Reparaci√≥n* si *necesitas* alguna reparaci√≥n *general* o *concreta* üõ†Ô∏èüîß.',{
    delay:1000
})
.addAnswer('Escribe *Asesorar Compra* si *necesitas ayuda* al *comprar* alg√∫n *dispositivo electr√≥nico* üõçÔ∏èüõí.',{
    delay:1000
})
.addAnswer('Escribe *Personal* tu motivo es *personal* o *social* üòÅü§©.',{
    delay:1000
})
.addAnswer('Escribe *Gracias* Si te *gustar√≠a* ver los *agradecimientos* y *colaboraciones* de este *bot*. ‚ù§Ô∏è',{
    delay:1000
})

const flujoReparaci√≥n = addKeyword (['reparacion','reparaci√≥n']).addAnswer('Has elegido *reparaci√≥n*')
.addAnswer('Antes de empezar, ¬øPodr√≠as escribirnos tu nombre? üßî', {capture:true},{
    delay:3000
})
.addAnswer('¬øPodr√≠as *escribirnos* que tipo de *dispositivo* es el que necesita *reparaci√≥n*? _ej. m√≥vil, port√°til_üì≤üì≤.', {capture:true})
.addAnswer('Entendido!')
.addAnswer('¬øPodr√≠as darnos *un poco* de mas *informaci√≥n* ‚ÑπÔ∏è del problema para saber ü§îde que *se trata*? ü§óü§ó', {capture:true},{
    delay:3000
})
.addAnswer('*Estamos* enviando la *informaci√≥n* a uno de nuestros *agentes* üëå‚ÑπÔ∏è, en cuanto *podamos* podremos *atenderte*. üòâüòâ. *Recuerda* que cuando quieras que la *conversaci√≥n finalice* tienes que *escribir* *"bot"* ü§ñ. No *saludes* mientras est√©s en la *conversaci√≥n* üí¨üí≠.')


const flujogracias = addKeyword (['gracias']).addAnswer('Agradecemos que hayas elegido esta opci√≥n üëè‚ù§Ô∏èü§ó. Agradecemos a:')

.addAnswer('A nuestro *Programador* üë®‚Äçüíª - *_H√©ctor S√°nchez Barrilero_* ', {
    delay:1000
})
.addAnswer('A nuestro *Beta tester* üïπÔ∏è - *_Jes√∫s Demetrio Malvar Flores_* ', {
    delay:1000
})
.addAnswer('A la ```librer√≠a``` *de comandos*üßæ - *_Leifer M√©ndez_* ', {
    delay:1000
})
.addAnswer('A los *Servidores gratuitos* que nos han prestado su servicio üíª - *_Baileys_* y *_WAWeb_*', {
    delay:1000
})
.addAnswer('Y a el *Servicio de c√≥digo* - üëæ *_Visual Studio Code_*', {
    delay:1000
})
.addAnswer('Muchas gracias ‚ù§Ô∏è. Para continuar escribe *bot*', {
    delay:1000
})
const main = async () => {
    const adapterDB = new MockAdapter()
    const adapterFlow = createFlow([flujoPrincipal, flujoReparaci√≥n, flujogracias])
    const adapterProvider = createProvider(BaileysProvider)

    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    })

    QRPortalWeb(3000)
}

main()
